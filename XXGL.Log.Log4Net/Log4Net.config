<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <root>
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <level value="ALL" />
      <!--<appender-ref ref="ColoredConsoleAppender"/>-->
      <appender-ref ref="RollingLogFileAppender"/>
      <!--<appender-ref ref="AdoNetAppender"/>
      <appender-ref ref="SmtpAppender"/>-->
    </root>

    <!--appender详细资料  http://logging.apache.org/log4net/release/config-examples.html-->
    <!--记录到文件-->
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径-->
      <param name= "File" value= "logs/"/>
      <!--是否是向文件中追加日志-->
      <param name= "AppendToFile" value= "true"/>
      <!--使用Unicode编码-->
      <Encoding value="UTF-8" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name= "MaxSizeRollBackups" value= "10"/>
      <!--日志文件名是否是固定不变的-->
      <param name= "StaticLogFileName" value= "false"/>
      <!--日志文件名格式为:2008-08-31.log-->
      <param name= "DatePattern" value= "yyyy-MM-dd&quot;.log&quot;"/>

      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name= "RollingStyle" value= "Composite"/>


      <!--此处按日期产生文件夹，文件名固定。注意&quot; 的位置-->
      <!--
      <param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />

      -->
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <!--

      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;"  />

      -->
      <!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
      <!--

      <param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->

      <!--每个文件的大小。只在混合方式与文件大小方式下使用。

超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。

可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->

      <!--<param name="maximumFileSize" value="2KB" />-->

      <!--计数类型为1，2，3…-->
      <!--<param name="CountDirection" value="1"/>-->



      <!--记录日志写入文件时，不锁定文本文件-->
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->

      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger     操作者ID：%property{Operator} 操作类型：%property{Action}%n             当前机器名:%property%n当前机器名及登录用户：%username %n               记录位置：%location%n 消息描述：%property{Message}%n                    异常：%exception%n 消息：%message%newline%n%n" />
      </layout>

      <!--过滤设置，LevelRangeFilter为使用的过滤器。 -->

      <filter type="log4net.Filter.LevelRangeFilter">

        <param name="LevelMin" value="DEBUG" />

        <param name="LevelMax" value="FATAL" />

      </filter>


    </appender>
    <!-- 控制台前台显示日志 -->
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <!--可以设定对应的颜色-->
        <level value="FATAL" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="ERROR" />
        <foreColor value="yellow" />
      </mapping>
      <mapping>
        <level value="Info" />
        <foreColor value="Green" />
      </mapping>
      <mapping>
        <level value="DEBUG" />
        <backColor value="Red, HighIntensity" />
        <!--背景色-->
        <foreColor value="yellow" />
        <!--字体颜色-->
      </mapping>

      <layout type="log4net.Layout.PatternLayout">
        <!--reference:http://www.cnblogs.com/zhangchenliang/p/4546352.html-->
        <conversionPattern value="%n%date{HH:mm:ss,fff} [%-5level] %m %n" />
        <!--<conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 操作者ID：%property{Operator} 操作类型：%property{Action}%n 当前机器名:%property%n当前机器名及登录用户：%username %n 记录位置：%location%n 消息描述：%property{Message}%n 异常：%exception%n 消息：%message%newline%n%n"/>-->

      </layout>

      <!--
      DenyAllFilter 阻止所有的日志事件被记录

      LevelMatchFilter 只有指定等级的日志事件才被记录

      LevelRangeFilter 日志等级在指定范围内的事件才被记录

      LoggerMatchFilter 与Logger名称匹配，才记录

      PropertyFilter 消息匹配指定的属性值时才被记录

      StringMathFilter 消息匹配指定的字符串才被记录
      -->
      <!--filter的使用方式  http://blog.csdn.net/xincai/article/details/7696916 -->
      <!--日志输出等级-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="FATAL" />
      </filter>

      <!--只包含debug的输出，其他全部阻止-->
      <!--<filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="DEBUG" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />-->


      <!--经测试只使用LevelMatchFilter需要和DenyAllFilter配合使用-->
      <!--<filter type="log4net.Filter.LevelMatchFilter">
        <param name="LevelToMatch" value="Info" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />-->



      <!--<filter type="log4net.Filter.StringMatchFilter">
        <param name="StringToMatch" value="Debug日志" />
      </filter>
      <filter type="log4net.Filter.DenyAllFilter" />-->


    </appender>
    <!--录入到数据库-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="100" />
      <!--表示是记录100 条到缓冲区，满100条后再写入SQL server-->

      <!--
      CREATE TABLE [dbo].[Log] (
    [Id] [int] IDENTITY (1, 1) NOT NULL,
    [Date] [datetime] NOT NULL,
    [Thread] [varchar] (255) NOT NULL,
    [Level] [varchar] (50) NOT NULL,
    [Logger] [varchar] (255) NOT NULL,
    [Message] [varchar] (4000) NOT NULL,
    [Exception] [varchar] (2000) NULL
)
      -->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=.;initial catalog=test2;integrated security=false;persist security info=True;User ID=sa;Password=123456" />
      <commandText value="INSERT INTO Log2 ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    <!--发送邮件-->
    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <authentication value="Basic" />
      <to value="18013866920@163.com" />
      <from value="18013866920@163.com" />
      <username value="18013866920" />
      <password value="zhang19920303" />
      <subject value="test logging message" />
      <smtpHost value="smtp.163.com" />
      <bufferSize value="512" />
      <!--超长部分是否丢弃-->
      <lossy value="true" />
      <!-- 下面的定义， 就是 日志级别 大于 WARN 的， 才发邮件.  -->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="WARN"/>
      </evaluator>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newline%date [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline" />
      </layout>
      <!-- 下面是 定义邮件的格式 （好多换行啊） -->
      <!--<layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%property{log4net:HostName} :: %level :: %message %newlineLogger: %logger%newlineThread: %thread%newlineDate: %date%newlineNDC: %property{NDC}%newline%newline" />
      </layout>-->

    </appender>

    <!--log4net.ILog log = log4net.LogManager.GetLogger("testApp.Logging1");//获取一个日志记录器
       //Type type = MethodBase.GetCurrentMethod().DeclaringType;
       //ILog log = LogManager.GetLogger(type);
    -->
  </log4net>
</configuration>