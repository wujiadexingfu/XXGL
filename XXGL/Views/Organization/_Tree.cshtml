@{
    Layout = null;
}

<script type="text/javascript">
    var zTreeObjOrganization;
    // zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
    var settingOrganization = {

        view: {
            selectedMulti: false,
            fontCss: setFontCss
        },
        async: {
            enable: true,
            dataType: 'json',
            type: 'post',
            url: "@Url.Action("GetTreeNodes")",
            autoParam: ["id","uniqueid"],
        },
        callback: {
            beforeAsync: beforeAsyncOrganization,
            onAsyncSuccess: onAsyncSuccessOrganization,
            onClick: zTreeOnClickOrganization

        }
    };


    //设置文字的颜色
    function setFontCss(treeId, treeNode) {
        if (treeNode.level == 0) {
            return { 'font-weight': 'bold', 'color': 'red', 'font-family': '微软雅黑'};
        } else if (treeNode.level == 1) {
            return { 'font-weight': 'bold', 'color': 'green',  'font-family': '微软雅黑'};
        } else if (treeNode.level == 2) {
            return { 'font-weight': 'bold', 'color': 'blue', 'font-family': '微软雅黑' };
        } else {
            return {};
        }
    };

    function beforeAsyncOrganization() {
        curAsyncCountOrganization++;
    };


    function onAsyncSuccessOrganization(event, treeId, treeNode, msg) {
        curAsyncCountOrganization--;
        if (curStatusOrganization == "expand") {
            expandNodesOrganization(treeNode.children);
        } else if (curStatusOrganization == "async") {
            asyncNodes(treeNode.children);
        }

        if (curAsyncCountOrganization <= 0) {
            curStatusOrganization = "";
        }
    }

    var curStatusOrganization = "init";
    var  curAsyncCountOrganization = 0;
    var goAsyncOrganization = false;

    function UnExpandAllOrganization() {
        var zTree = $.fn.zTree.getZTreeObj("OgranizationTree");
        zTree.expandAll(false);
    }

    function ExpandAllOrganization() {
        if (!checkOrganization()) {
            return;
        }
        var zTree = $.fn.zTree.getZTreeObj("OgranizationTree");
        expandNodesOrganization(zTree.getNodes());
        if (!goAsyncOrganization) {
            curStatusOrganization = "";
        }
    };
    function expandNodesOrganization(nodes) {
        if (!nodes) return;
        curStatusOrganization = "expand";
        var zTree = $.fn.zTree.getZTreeObj("OgranizationTree");
        for (var i = 0, l = nodes.length; i < l; i++) {
            zTree.expandNode(nodes[i], true, false, false);//展开节点就会调用后台查询子节点
            if (nodes[i].isParent && nodes[i].zAsync) {
                expandNodesOrganization(nodes[i].children);//递归
            } else {
                goAsyncOrganization = true;
            }
        }
    };

    function checkOrganization() {
        if (curAsyncCountOrganization > 0) {
            return false;
        }
        return true;
    };

    function zTreeOnClickOrganization(event, treeId, treeNode) {
        $("#OrganizationUniqueID").val(treeNode.uniqueid);
        QueryOrganiztaion();
        QueryOrganiztaionUser();
    }


    $(document).ready(function () {
        zTreeObjOrganization = $.fn.zTree.init($("#OgranizationTree"), settingOrganization);

    });




</script>

<div>

    <input type="hidden" id="OrganizationUniqueID" />
    <ul id="OgranizationTree" class="ztree"></ul>
</div>




